{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/edit-user/edit-user.component.css","webpack:///./src/app/edit-user/edit-user.component.html","webpack:///./src/app/edit-user/edit-user.component.ts","webpack:///./src/app/models/user.ts","webpack:///./src/app/services/global.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"identity\\\" class=\\\"navigation col-lg-1\\\">\\n  <h1>\\n    {{title}}\\n  </h1>\\n\\n    <nav id=\\\"navigation\\\">\\n\\n      \\n    </nav>\\n\\n    <nav id=\\\"user_logged\\\">\\n        <span>{{identity.name}}</span>\\n        <span class=\\\"btn btn-warning\\\" (click)=\\\"logout()\\\"> Cerrar Sesion</span>\\n        <a href=\\\"#\\\">\\n            <span class=\\\"glyphicon glyphicon-cog\\\" aria-hidden=\\\"true\\\"></span>\\n          Mis datos\\n        </a>\\n    </nav>\\n</div>\\n\\n<div class=\\\"clearfix\\\"></div>\\n\\n    <div *ngIf=\\\"identity\\\" class=\\\"central col-lg-11\\\">\\n      <p>Estas logeado en la app </p>\\n      <app-edit-user></app-edit-user>\\n    </div>\\n\\n\\n<div class=\\\"container\\\" *ngIf=\\\"!identity\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm\\\">\\n\\n            <!--FORMULARIO DE LOGIN-->\\n          <h1>Identificate</h1>\\n          <div *ngIf=\\\"errorMessage\\\">\\n            <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n              <strong>Error</strong> {{errorMessage}}\\n            </div>\\n          </div>\\n          <form  #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"col-md-7\\\">\\n            <p>\\n              <label>Correo Electronico:</label>\\n              <input type=\\\"email\\\" #email=\\\"ngModel\\\" name=\\\"email\\\" [(ngModel)]=\\\"user.email\\\" class=\\\"form-control\\\" required />\\n              <span *ngIf=\\\"!email.valid && email.touched\\\">\\n                  El email es requerido\\n              </span>\\n            </p>\\n            <p>\\n                <label>Password:</label>\\n                <input type=\\\"password\\\" #password=\\\"ngModel\\\" name=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" class=\\\"form-control\\\" required />\\n            </p>\\n              <input type=\\\"submit\\\" value=\\\"Entrar\\\" class=\\\"btn btn-primary\\\"/>\\n          </form>\\n      </div>\\n      <div class=\\\"col-sm\\\">\\n\\n        <!--FORMULARIO DE REGISTRO-->\\n\\n          <h1>Registrate</h1>\\n\\n          <div *ngIf=\\\"alertRegister\\\">\\n              <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n                <strong>Error</strong> {{alertRegister}}\\n              </div>\\n          </div>\\n          \\n\\n          <form #registerForm =\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitRegister()\\\" class=\\\"col-md-10\\\">\\n                <p>\\n                    <label>Nombre:</label>\\n                    <input type=\\\"text\\\" #name='ngModel' name =\\\"name\\\" [(ngModel)]=\\\"user_register.name\\\" class=\\\"form-control\\\" required />\\n                    <span *ngIf=\\\"!name.valid && name.touched\\\">\\n                        El nombre es requerido\\n                    </span>\\n                </p>\\n\\n                <p>\\n                      <label>Apellidos:</label>\\n                      <input type=\\\"text\\\" #surname='ngModel' name =\\\"surname\\\" [(ngModel)]=\\\"user_register.surname\\\" class=\\\"form-control\\\" required />\\n                      <span *ngIf=\\\"!surname.valid && surname.touched\\\">\\n                          Los apellidos son requeridos\\n                      </span>   \\n                </p>\\n\\n                <p>\\n                    <label>Correo Electronico:</label>\\n                    <input type=\\\"email\\\" #email=\\\"ngModel\\\" name=\\\"email\\\" [(ngModel)]=\\\"user_register.email\\\" class=\\\"form-control\\\" required />\\n                    <span *ngIf=\\\"!email.valid && email.touched\\\">\\n                        El email es requerido\\n                    </span>\\n                </p>\\n\\n                <p>\\n                      <label>Password:</label>\\n                      <input type=\\\"password\\\" #password=\\\"ngModel\\\" name=\\\"password\\\" [(ngModel)]=\\\"user_register.password\\\" class=\\\"form-control\\\" required />\\n                      <span *ngIf=\\\"!password.valid && password.touched\\\">\\n                          El password es requerido\\n                      </span>\\n                </p>\\n\\n                <input type=\\\"submit\\\" value=\\\"Registrarse\\\" class=\\\"btn btn-primary\\\"/>\\n\\n          </form>\\n\\n      </div>\\n    </div>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { User } from './models/user';\nimport {UserService} from './services/user.service'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [UserService]\n})\nexport class AppComponent implements OnInit {\n  public title = 'iMusic';\n  public user: User;\n  public user_register: User;\n  public identity;\n  public token;\n  public errorMessage;\n  public alertRegister;\n\n  constructor(\n    private _userService:UserService\n  ){\n    this.user = new User('','','','','','ROLE_USER','');\n    this.user_register = new User('','','','','','ROLE_USER','');\n  }\n\n  ngOnInit(){\n    this.identity = this._userService.getIdentity();\n    this.token = this._userService.getToken();\n  }\n\n  public onSubmit(){\n    //console.log(this.user);\n\n    this._userService.signup(this.user).subscribe(\n      response => {\n        let identity = response.user;\n        this.identity = identity;\n        if(!this.identity._id){\n          alert(\"El usuario no esta identificado\");\n        }else{\n              localStorage.setItem('identity',JSON.stringify(identity));\n\n              this._userService.signup(this.user, 'true').subscribe(\n                  response => {  \n                  let token = response.token;\n                  this.token = token;\n                  if(this.token.length <= 0){\n                    alert(\"El Token no se ha generado\");\n                  }else{\n                    localStorage.setItem('token',token);\n                    this.user = new User('','','','','','ROLE_USER','');\n                  }\n                },\n                error => {\n                  var errorMessage  = <any> error;\n                  if(errorMessage != null){\n                    var body = JSON.parse(error._body);\n                    this.errorMessage = body.message;\n                  }\n                }\n              );\n          }\n      },\n      error => {\n        var errorMessage  = <any> error;\n        if(errorMessage != null){\n          var body = JSON.parse(error._body);\n          this.errorMessage = body.message;\n        }\n      }\n    );\n  }\n\n  onSubmitRegister(){\n\n    this._userService.register(this.user_register).subscribe(\n      response => {\n        let user = response.user;\n        this.user_register = user;\n\n        if(!user._id){\n          this.alertRegister =\"error al registrrase\"; \n        }else{\n          this.alertRegister = \"Registro correcto. Inicia sesion con \"+this.user_register.email;\n          this.user_register = new User('','','','','','ROLE_USER','');        }\n        \n\n      },\n      error => {\n        var errorMessage  = <any> error;\n        if(errorMessage != null){\n          var body = JSON.parse(error._body);\n          this.alertRegister = body.message;\n\n          console.log(error);\n        }\n      }\n    )\n  }\n\n  logout(){\n    localStorage.removeItem('identity');\n    localStorage.removeItem('token');\n    localStorage.clear();\n    this.identity = null;\n    this.token = null;\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {HttpModule} from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { EditUserComponent } from './edit-user/edit-user.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EditUserComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-lg-6\\\" *ngIf=\\\"identity\\\">\\n  <h1>{{title}}</h1>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {UserService} from '../services/user.service';\nimport {User} from '../models/user';\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.css'],\n  providers:[UserService]\n})\nexport class EditUserComponent implements OnInit {\n\n  public title: string;\n  public user: User;\n  public identity;\n  public token;\n\n  constructor(\n    private _userService: UserService\n  ) {\n    this.title = \"Editar Usuario\";\n   }\n\n\n\n  ngOnInit() {\n    this.identity = this._userService.getIdentity();\n    this.token = this._userService.getToken();\n  }\n\n}\n","export class User{\n\n    constructor(\n        public _id:string,\n        public name:string,\n        public surname:string,\n        public email:string,\n        public password:string,\n        public role:string,\n        public image:string\n    ){}\n}","export var GLOBAL = {\n\n    url:'http://localhost:3977/api/',\n    ip: '127.0.0.1'\n}","import {Injectable} from '@angular/core';\nimport {Http,Response,Headers} from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport {Observable} from 'rxjs/Observable';\nimport {GLOBAL} from './global';\n\n@Injectable()\n\nexport class UserService{\n    public url: string;\n    public identity;\n    public token;\n\n    constructor(private _http: Http){\n        this.url = GLOBAL.url;\n    }\n\n    signup(user_to_login,gethash= null ){\n\n        if(gethash != null){\n            user_to_login.gethash = gethash;\n        }\n        let json = JSON.stringify(user_to_login);\n        let params = json;\n\n        let headers = new Headers({'Content-Type':'application/json'});\n\n        return this._http.post(this.url+'login', params, {headers:headers})\n        .map(res => res.json());\n    }\n\n    register(user_to_register){\n\n        let params = JSON.stringify(user_to_register);\n\n        let headers = new Headers({'Content-Type':'application/json'});\n\n        return this._http.post(this.url+'register', params, {headers:headers})\n        .map(res => res.json());\n\n    }\n\n    updateUser(user_to_update){\n\n        let params = JSON.stringify(user_to_update);\n\n        let headers = new Headers({\n             'Authorization':this.getToken,\n             'Content-Type':'application/json'\n            });\n\n        return this._http.put(this.url+'update-user/'+user_to_update._id, params, {headers:headers})\n        .map(res => res.json());\n\n    }\n\n    getIdentity(){\n        let identity = JSON.parse(localStorage.getItem('identity'));\n        if(identity != \"undefined\"){\n            this.identity = identity;\n        }else{\n            this.identity = null;\n        }\n        return this.identity;\n    }\n\n    getToken(){\n        let token = localStorage.getItem('token');\n        if(token != \"undefined\"){\n        this.token = token;\n        }else{\n            this.token = null;\n        }\n        return this.token\n    }\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}